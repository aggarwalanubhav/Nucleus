/*
 * Copyright 2019-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/******************************************************************************
 *
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/GtpV2StackCodeGen/tts/ietemplate.cpp.tt>
 ******************************************************************************/

#include "pTmsiSignatureIe.h"
#include "dataTypeCodecUtils.h"

PTmsiSignatureIe::PTmsiSignatureIe() 
{
    ieType = 112;
    // TODO

}

PTmsiSignatureIe::~PTmsiSignatureIe() {
    // TODO Auto-generated destructor stub
}

bool PTmsiSignatureIe::encodePTmsiSignatureIe(MsgBuffer &buffer, PTmsiSignatureIeData const &data)
{
    if (!(buffer.writeUint8(data.pTmsiSignature)))
    {
        errorStream.add((char *)"Encoding of pTmsiSignature failed\n");
        return false;
    }

    return true;
}

bool PTmsiSignatureIe::decodePTmsiSignatureIe(MsgBuffer &buffer, PTmsiSignatureIeData &data, Uint16 length)
{     
    // TODO optimize the length checks
    
    Uint16 ieBoundary = buffer.getCurrentIndex() + length;

    buffer.readUint8(data.pTmsiSignature);
    if (buffer.getCurrentIndex() > ieBoundary)
    {
        errorStream.add((char *)"Attempt to read beyond IE boundary: pTmsiSignature\n");
        return false;
    }

    // The IE is decoded now. The buffer index should be pointing to the 
    // IE Boundary. If not, we have some more data left for the IE which we don't know
    // how to decode
    if (ieBoundary == buffer.getCurrentIndex())
    {
        return true;
    }
    else
    {
        errorStream.add((char *)"Unable to decode IE PTmsiSignatureIe\n");
        return false;
    }
}
void PTmsiSignatureIe::displayPTmsiSignatureIe_v(PTmsiSignatureIeData const &data, Debug &stream)
{
    stream.incrIndent();
    stream.add((char *)"PTmsiSignatureIeData:");
    stream.incrIndent();
    stream.endOfLine();
  
    stream.add((char *)"pTmsiSignature: ");
    stream.add(data.pTmsiSignature);
    stream.endOfLine();
    stream.decrIndent();
    stream.decrIndent();
}
